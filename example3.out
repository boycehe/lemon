State 0:
          main ::= * in
          in ::= * in NEWLINE
      (2) in ::= *
          in ::= * in program NEWLINE

                          main accept
                            in shift        1      
                     {default} reduce       2      in ::=

State 1:
      (0) main ::= in *
          in ::= in * NEWLINE
          in ::= in * program NEWLINE
          program ::= * expr
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr POW expr
          expr ::= * MINUS expr
          expr ::= * LP expr RP
          expr ::= * NUM

                             $ reduce       0      main ::= in
                         MINUS shift        3      
                       NEWLINE shift-reduce 1      in ::= in NEWLINE
                            LP shift        2      
                           NUM shift-reduce 12     expr ::= NUM
                       program shift        17     
                          expr shift        10     

State 2:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr POW expr
          expr ::= * MINUS expr
          expr ::= * LP expr RP
          expr ::= LP * expr RP
          expr ::= * NUM

                         MINUS shift        3      
                            LP shift        2      
                           NUM shift-reduce 12     expr ::= NUM
                          expr shift        9      

State 3:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr POW expr
          expr ::= * MINUS expr
          expr ::= MINUS * expr
          expr ::= * LP expr RP
          expr ::= * NUM

                         MINUS shift        3      
                            LP shift        2      
                           NUM shift-reduce 12     expr ::= NUM
                          expr shift        13     

State 4:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr POW expr
          expr ::= expr POW * expr
          expr ::= * MINUS expr
          expr ::= * LP expr RP
          expr ::= * NUM

                         MINUS shift        3      
                            LP shift        2      
                           NUM shift-reduce 12     expr ::= NUM
                          expr shift        14     

State 5:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= expr DIVIDE * expr
          expr ::= * expr POW expr
          expr ::= * MINUS expr
          expr ::= * LP expr RP
          expr ::= * NUM

                         MINUS shift        3      
                            LP shift        2      
                           NUM shift-reduce 12     expr ::= NUM
                          expr shift        15     

State 6:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= expr TIMES * expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr POW expr
          expr ::= * MINUS expr
          expr ::= * LP expr RP
          expr ::= * NUM

                         MINUS shift        3      
                            LP shift        2      
                           NUM shift-reduce 12     expr ::= NUM
                          expr shift        16     

State 7:
          expr ::= * expr MINUS expr
          expr ::= * expr PLUS expr
          expr ::= expr PLUS * expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr POW expr
          expr ::= * MINUS expr
          expr ::= * LP expr RP
          expr ::= * NUM

                         MINUS shift        3      
                            LP shift        2      
                           NUM shift-reduce 12     expr ::= NUM
                          expr shift        11     

State 8:
          expr ::= * expr MINUS expr
          expr ::= expr MINUS * expr
          expr ::= * expr PLUS expr
          expr ::= * expr TIMES expr
          expr ::= * expr DIVIDE expr
          expr ::= * expr POW expr
          expr ::= * MINUS expr
          expr ::= * LP expr RP
          expr ::= * NUM

                         MINUS shift        3      
                            LP shift        2      
                           NUM shift-reduce 12     expr ::= NUM
                          expr shift        12     

State 9:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * POW expr
          expr ::= LP expr * RP

                          PLUS shift        7      
                         MINUS shift        8      
                        DIVIDE shift        5      
                         TIMES shift        6      
                           POW shift        4      
                            RP shift-reduce 11     expr ::= LP expr RP

State 10:
      (4) program ::= expr *
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * POW expr

                          PLUS shift        7      
                         MINUS shift        8      
                        DIVIDE shift        5      
                         TIMES shift        6      
                           POW shift        4      
                     {default} reduce       4      program ::= expr

State 11:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
      (6) expr ::= expr PLUS expr *
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * POW expr

                        DIVIDE shift        5      
                         TIMES shift        6      
                           POW shift        4      
                     {default} reduce       6      expr ::= expr PLUS expr

State 12:
          expr ::= expr * MINUS expr
      (5) expr ::= expr MINUS expr *
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * POW expr

                        DIVIDE shift        5      
                         TIMES shift        6      
                           POW shift        4      
                     {default} reduce       5      expr ::= expr MINUS expr

State 13:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * POW expr
     (10) expr ::= MINUS expr *

                           POW shift        4      
                     {default} reduce       10     expr ::= MINUS expr

State 14:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
          expr ::= expr * POW expr
      (9) expr ::= expr POW expr *

                           POW shift        4      
                     {default} reduce       9      expr ::= expr POW expr

State 15:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
          expr ::= expr * DIVIDE expr
      (8) expr ::= expr DIVIDE expr *
          expr ::= expr * POW expr

                           POW shift        4      
                     {default} reduce       8      expr ::= expr DIVIDE expr

State 16:
          expr ::= expr * MINUS expr
          expr ::= expr * PLUS expr
          expr ::= expr * TIMES expr
      (7) expr ::= expr TIMES expr *
          expr ::= expr * DIVIDE expr
          expr ::= expr * POW expr

                           POW shift        4      
                     {default} reduce       7      expr ::= expr TIMES expr

State 17:
          in ::= in program * NEWLINE

                       NEWLINE shift-reduce 3      in ::= in program NEWLINE

----------------------------------------------------
Symbols:
    0: $:
    1: PLUS
    2: MINUS
    3: DIVIDE
    4: TIMES
    5: POW
    6: NOT
    7: NEWLINE
    8: LP
    9: RP
   10: NUM
   11: error:
   12: main: <lambda> MINUS NEWLINE LP NUM
   13: in: <lambda> MINUS NEWLINE LP NUM
   14: program: MINUS LP NUM
   15: expr: MINUS LP NUM
